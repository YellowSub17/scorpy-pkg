



import CifFile as pycif
import numpy as np

class CifDataSaveLoad:


    def save(self, path):

        cif = pycif.CifFile()
        block = pycif.CifBlock()
        cif['block'] = block
        cif['block']['_symmetry.space_group_name_h-m'] = f'{self.spg}'
        cif['block']['_cell.angle_alpha'] = np.degrees(self.alpha)
        cif['block']['_cell.angle_beta'] = np.degrees(self.beta)
        cif['block']['_cell.angle_gamma'] = np.degrees(self.gamma)
        cif['block']['_cell.length_a'] = self.a_mag
        cif['block']['_cell.length_b'] = self.b_mag
        cif['block']['_cell.length_c'] = self.c_mag

        cif['block']['_refln.index_h'] = self.scat_bragg[:,0]
        cif['block']['_refln.index_k'] = self.scat_bragg[:,1]
        cif['block']['_refln.index_l'] = self.scat_bragg[:,2]
        cif['block']['_refln.intensity_meas'] = self.scat_bragg[:,3]
        cif['block'].CreateLoop( ['_refln.index_h', '_refln.index_k', '_refln.index_l', '_refln.intensity_meas'] )

        outfile = open(path, 'w')
        outfile.write(cif.WriteOut())
        outfile.close()


    def save_hkl(self, path):

        file = open(path, 'w')

        preamble = ''
        preamble += 'CrystFEL reflection list version 2.0\n'
        preamble += 'Symmetry: 1\n'
        preamble += '\th\tk\tl\tI\tphase\tsigma(I)\tnmeas\n'

        file.write(preamble)

        for scat in self.scat_bragg:
            line = f'\t{int(scat[0])}\t{int(scat[1])}\t{int(scat[2])}\t{scat[3]}\t-\t0.0\t1\n'
            file.write(line)

        postscript = ''
        postscript += 'End of reflections\n'
        postscript += 'Generated by CrystFEL 0.9.0\n'
        postscript += 'partialator -i cxi_io108_it1.stream -o ./it1_merging/108_it1_par.hkl -y 4/mmm --model=unity --iterations=1\n'
        postscript += 'Audit information from stream:\n'
        postscript += 'Generated by CrystFEL 0.9.0\n'
        postscript += 'indexamajig -i files.lst -o cxi_io108_it1.stream -g agipd_2304_opt_102020.geom -p 1vds.pdb --peaks=cxi -j 6 --multi --int-radius=2,3,5.\n'
        postscript += 'Indexing methods selected: dirax,asdf,xgandalf\n'

        file.write(postscript)

        file.close()






